{"version":3,"sources":["utils/merge-order-team-stacks.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/antd/es/tag/style/index.js","../node_modules/antd/es/_util/capitalize.js","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","containers/nfl/components/TeamStacks/stack-table.js","containers/nfl/components/TeamStacks/general-stack-settings.js","containers/nfl/components/TeamStacks/basic-stack-settings.js","containers/nfl/components/TeamStacks/utils/errors.js","containers/nfl/components/TeamStacks/advanced-stack-settings.js","containers/nfl/components/TeamStacks/index.js"],"names":["mergeOrderTeamStacks","teamStacks","playersTable","TeamAbbrevMap","sorted","vegasKeys","_updatedTeamStacks","forEach","team","_team","teamRow","find","player","TeamAbbrev","_vk","push","sort","a","b","localeCompare","e","console","log","Error","PlusCircleOutlined","props","ref","React","AntdIcon","_extends","icon","PlusCircleOutlinedSvg","genTagStatusStyle","token","status","cssVariableType","str","capitalizedCssVariableType","charAt","toUpperCase","slice","componentCls","color","background","borderColor","genPresetStyle","genPresetColor","colorKey","_ref","textColor","lightBorderColor","lightColor","darkColor","colorTextLightSolid","genBaseStyle","paddingXXS","lineWidth","tagPaddingHorizontal","paddingInline","iconMarginInline","Object","assign","resetComponent","display","height","marginInlineEnd","marginXS","fontSize","tagFontSize","lineHeight","tagLineHeight","whiteSpace","defaultBg","border","lineType","colorBorder","borderRadius","borderRadiusSM","opacity","transition","motionDurationMid","textAlign","position","direction","defaultColor","marginInlineStart","colorTextDescription","tagIconSize","cursor","colorTextHeading","iconCls","backgroundColor","colorPrimary","colorFillSecondary","colorPrimaryHover","colorPrimaryActive","tagBorderlessBg","genComponentStyleHook","fontSizeIcon","fontSizeSM","lineHeightSM","tagToken","mergeToken","colorFillTertiary","colorFillQuaternary","colorText","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckableTag","customizePrefixCls","prefixCls","className","checked","onChange","onClick","restProps","getPrefixCls","ConfigContext","useStyle","wrapSSR","hashId","cls","classNames","InternalTag","tagProps","rootClassName","style","children","onClose","closeIcon","closable","bordered","tag","visible","setVisible","isInternalColor","isPresetColor","isPresetStatusColor","tagStyle","undefined","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","useClosable","iconNode","CloseOutlined","mergedCloseIcon","isNeedWave","type","kids","tagNode","Wave","Tag","TeamStackOptions","styled","div","ToggleHeader","StyledInputNumber","Input","StyledInputNumberLong","StyledCheckbox","Checkbox","framed","overrideCheckboxColor","StyledCheckboxWhite","StyledTable","Table","overridePrimary","primaryColor","StyledButtonCol","Col","CheckBoxInput","row","_var","_onChange","_onStackingChange","target","NumberInput","placeholder","value","Number","NumberInputLong","key","teamGameData","title","dataIndex","width","render","text","src","require","default","alt","TeamToAbbrev","placement","sorter","OU","val","getColorForValueForOU","ImpPts","getColorForValueForImpPts","teamContraints","onTeamStacksChange","onChangeAllTeamStackOption","_","Group","compact","StackTable","state","toggle","showdown","extraCols","this","onChangeHandler","defaultChecked","lg","setState","selectedKeys","String","mode","Item","disabled","float","cancelText","okText","onCancel","onConfirm","clearStackSettings","uncheckStackingOptions","marginLeft","marginRight","columns","concat","dataSource","rows","pagination","pageSize","scroll","y","x","loading","size","rowKey","_row","Component","InputLabel","SettingsInput","InputContainer","WarningDiv","updateInputValue","settings","margin","addonBefore","addonAfter","data","allowRBStackPct","toFixed","evt","marginBottom","forceSecondGameStack","forceRBandDSTStack","offset","allowDefenseVsQB","allowDefenseVsFlex","allowDefenseVsKicker","marginTop","teamStackPct","gameStackPct","force2FlexStck","noStackPct","isTeam","getPositionFromKey","isMin","checkAgainst","converseVal","getConverseKey","getFlexMinMax","min","max","k","selectedPos","prefix","_min","_max","PlusCircleDiv","StyledPlusCircle","StyledNameInput","NoSelect","span","rowValsTeamStack","rowValsGameStack","cols","updateSpecificStackValue","removeSpecificStackRow","teamStackCols","keys","fontWeight","hasErrors","index","gameStackCols","v","edit","autoFocus","onBlur","onDoubleClick","DeleteOutlined","addSpecificStackRow","sanitizedSpecificStackData","sanitizeSpecificStacks","specificStacks","_sanitizedStacks","_s","StyledSwitch","Switch","SwitchCol","SettingsContainer","HeadingCard","Card","StyledEnableButton","Button","EnableDiv","Settings","stackSettingMode","showPresetsActive","updateSettings","site","slate","week","season","rowIndex","bulk","_specificStacks","JSON","parse","stringify","maxFreq","getMaxFreq","getEmptyStack","sport","counter","splice","_newStack","initialRow","updateSpecificStacksFromBasic","basicSettings","getAdvancedRowsFromBasic","resetStackSettings","getDefaultSpecificStacks","setPreset","_settings","presets","setTimeout","rowData","_teamStacks","map","stack","Opp","AllowSecondaryStack","_stack","updateTeamStacks","Promise","all","booleanKeys","_key","players","_teamStacksSettings","nflTeamNames","backgroundImage","FakurianDesign","backgroundSize","paddingTop","subscription","permissions","opt","nfl","historical_data","CheckOutlined","specific_stacks","ghost","checkedChildren","unCheckedChildren","bind","connect","lineup","loggedin","auth","account","savedLineups","fetchOpt","lineupActions"],"mappings":"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","file":"static/js/8.8ff2e2d6.chunk.js","sourcesContent":["const mergeOrderTeamStacks = (teamStacks, playersTable, TeamAbbrevMap, sorted=true) => {\n  const vegasKeys = [\"Opp\",\"OU\",\"Spread\",\"ImpPts\"]\n\n  let _updatedTeamStacks = []\n  teamStacks.forEach(team => {\n    const _team = { ...team }\n    const teamRow = playersTable.find((player) => {\n      return player.TeamAbbrev === _team.TeamAbbrev\n    })\n    vegasKeys.forEach(_vk => {\n      _team[_vk] = teamRow[_vk]\n    })\n\n    _updatedTeamStacks.push(_team)\n  })\n   if (sorted) {\n      _updatedTeamStacks.sort((a,b) => {\n        try {\n          return TeamAbbrevMap[a.TeamAbbrev].localeCompare(TeamAbbrevMap[b.TeamAbbrev])\n        } catch(e) {\n          console.log(a.TeamAbbrev)\n          throw Error()\n        }\n      })\n   }\n\n  return _updatedTeamStacks\n}\n\nexport default mergeOrderTeamStacks\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  PlusCircleOutlined.displayName = 'PlusCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","import capitalize from '../../_util/capitalize';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`],\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n};\nconst genPresetStyle = token => genPresetColor(token, (colorKey, _ref) => {\n  let {\n    textColor,\n    lightBorderColor,\n    lightColor,\n    darkColor\n  } = _ref;\n  return {\n    [`${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor,\n      // Inverse color\n      '&-inverse': {\n        color: token.colorTextLightSolid,\n        background: darkColor,\n        borderColor: darkColor\n      },\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n});\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      position: 'relative',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', token => {\n  const {\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = `${token.lineHeightSM * tagFontSize}px`;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return [genBaseStyle(tagToken), genPresetStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n}, token => ({\n  defaultBg: token.colorFillQuaternary,\n  defaultColor: token.colorText\n}));","export default function capitalize(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n  const ret = str.charAt(0).toUpperCase() + str.slice(1);\n  return ret;\n}","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst CheckableTag = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      checked,\n      onChange,\n      onClick\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const handleClick = e => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  const prefixCls = getPrefixCls('tag', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-checkable`]: true,\n    [`${prefixCls}-checkable-checked`]: checked\n  }, className, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"span\", Object.assign({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  })));\n};\nexport default CheckableTag;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { isPresetColor, isPresetStatusColor } from '../_util/colors';\nimport useClosable from '../_util/hooks/useClosable';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nimport { ConfigContext } from '../config-provider';\nimport CheckableTag from './CheckableTag';\nimport useStyle from './style';\nconst InternalTag = (tagProps, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      style,\n      children,\n      icon,\n      color,\n      onClose,\n      closeIcon,\n      closable,\n      bordered = true\n    } = tagProps,\n    props = __rest(tagProps, [\"prefixCls\", \"className\", \"rootClassName\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\", \"bordered\"]);\n  const {\n    getPrefixCls,\n    direction,\n    tag\n  } = React.useContext(ConfigContext);\n  const [visible, setVisible] = React.useState(true);\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('visible' in props), 'Tag', '`visible` is deprecated, please use `visible && <Tag />` instead.') : void 0;\n  }\n  React.useEffect(() => {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n  const isInternalColor = isPresetColor(color) || isPresetStatusColor(color);\n  const tagStyle = Object.assign(Object.assign({\n    backgroundColor: color && !isInternalColor ? color : undefined\n  }, tag === null || tag === void 0 ? void 0 : tag.style), style);\n  const prefixCls = getPrefixCls('tag', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const tagClassName = classNames(prefixCls, tag === null || tag === void 0 ? void 0 : tag.className, {\n    [`${prefixCls}-${color}`]: isInternalColor,\n    [`${prefixCls}-has-color`]: color && !isInternalColor,\n    [`${prefixCls}-hidden`]: !visible,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-borderless`]: !bordered\n  }, className, rootClassName, hashId);\n  const handleCloseClick = e => {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n    if (e.defaultPrevented) {\n      return;\n    }\n    setVisible(false);\n  };\n  const [, mergedCloseIcon] = useClosable(closable, closeIcon, iconNode => iconNode === null ? /*#__PURE__*/React.createElement(CloseOutlined, {\n    className: `${prefixCls}-close-icon`,\n    onClick: handleCloseClick\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-close-icon`,\n    onClick: handleCloseClick\n  }, iconNode), null, false);\n  const isNeedWave = typeof props.onClick === 'function' || children && children.type === 'a';\n  const iconNode = icon || null;\n  const kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  const tagNode = /*#__PURE__*/React.createElement(\"span\", Object.assign({}, props, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, mergedCloseIcon);\n  return wrapSSR(isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode);\n};\nconst Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nif (process.env.NODE_ENV !== 'production') {\n  Tag.displayName = 'Tag';\n}\nTag.CheckableTag = CheckableTag;\nexport default Tag;","import React, { Component } from 'react'\nimport { Table, Tooltip, Input, Checkbox, Menu, Popconfirm, Button, Row, Col } from 'antd'\nimport styled from 'styled-components'\n\nimport { nflTeamNames as TeamToAbbrev } from '../../../../utils/team-name-to-abbrev'\n\n\nimport { primaryColor } from '../../../../constants/styles'\nimport { overridePrimary, overrideCheckboxColor, framed } from '../../../../constants/partner'\n\nimport { getColorForValueForOU, getColorForValueForImpPts } from '../../../../utils/color'\n\nconst TeamStackOptions = styled.div`\n`\n\nconst ToggleHeader = styled.div`\n  background: white;\n  width: 100%;\n`\n\nconst StyledInputNumber = styled(Input)`\n  &.ant-input {\n    width: 40px !important;\n  }\n`\nconst StyledInputNumberLong = styled(Input)`\n  &.ant-input {\n    width: 70px !important;\n  }\n`\n\nconst StyledCheckbox = styled(Checkbox)`\n  > .ant-checkbox-wrapper + span, .ant-checkbox + span {\n    padding-right: 0;\n    padding-left: 5px;\n  }\n\n  input {\n    appearance: none;\n  }\n\n  &:checked {\n    background: #ffa500;\n  }\n\n  .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: ${framed ? overrideCheckboxColor : '#1890ff'};\n    border-color: ${framed ? overrideCheckboxColor : '#1890ff'};\n  }\n`\nconst StyledCheckboxWhite = styled(StyledCheckbox)`\n  color: white !important;\n\n  .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: ${framed ? overrideCheckboxColor : '#1890ff'};\n    border-color: ${framed ? overrideCheckboxColor : '#1890ff'};\n  }\n`\n\nconst StyledTable = styled(Table)`\n  td {\n    text-align: center;\n  }\n\n  tr th {\n    text-align: center !important;\n  }\n\n  tr:first-child {\n    th {\n      color: white !important;\n      background: ${framed ? overridePrimary : primaryColor} !important;\n    }\n  }\n\n  *, *:before, *:after {\n    -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;\n  }\n\n  .divide {\n    border-right: 2px solid ${framed ? overridePrimary : primaryColor} !important;\n  }\n\n  tr.ant-table-row-level-0:hover > td {\n    background: #e6f7ff !important;\n  }\n\n  tr.ant-table-row-level-0:hover > td.team-col {\n    background-color: rgba(0,0,0,0.05) !important;\n  }\n\n  td.team-col {\n    background-color: rgba(0,0,0,0.05) !important;\n  }\n`\nconst StyledButtonCol = styled(Col)`\n  height: 48px;\n  background: white;\n\n  button {\n    margin-top: 8px;\n  }\n`\n\nconst CheckBoxInput = ({row, _var, _onChange, children}) => (\n  <StyledCheckbox\n    checked={row[_var]}\n    onClick={(e) => _onStackingChange(row, _var, e.target.checked, _onChange)}\n  >{children}</StyledCheckbox>\n)\n\nconst NumberInput = ({row, _var, _onChange, children}) => (\n  <StyledInputNumber\n    placeholder=\"0\"\n    value={Number(row[_var]) > 0 ? row[_var] : ''}\n    onChange={(e) => _onStackingChange(row, _var, Number(e.target.value), _onChange)}\n  >{children}</StyledInputNumber>\n)\n\nconst NumberInputLong = ({row, _var, _onChange, children}) => (\n  <StyledInputNumberLong\n    placeholder=\"0\"\n    value={Number(row[_var]) > 0 ? row[_var] : ''}\n    onChange={(e) => _onStackingChange(row, _var, Number(e.target.value), _onChange)}\n  >{children}</StyledInputNumberLong>\n)\n\nconst _onStackingChange = (row, key, value, _onChange) => {\n  const _row = {\n    ...row,\n    [key]: value\n  }\n  _onChange(_row)\n}\n\nconst teamGameData = [\n  {\n    title: 'Team',\n    dataIndex: 'TeamAbbrev',\n    key: 'TeamAbbrev',\n    className: 'team-col',\n    width: 80,\n    render: (text) => (\n      <img src={require(`../../../../assets/images/nfl/teamlogos/${text}.png`).default} style={{width: '28px'}} alt={TeamToAbbrev[text]}/>\n    ),\n  },\n  {\n    title: 'Opp',\n    dataIndex: 'Opp',\n    key: 'opp',\n    width: 80,\n    render: (text) => (\n      <img src={require(`../../../../assets/images/nfl/teamlogos/${text}.png`).default} style={{width: '28px'}} alt={TeamToAbbrev[text]}/>\n    ),\n  },\n  {\n    title: (\n      <Tooltip placement=\"top\" title={\"Projected total points for the game\"}>\n        <span>OU</span>\n      </Tooltip>\n    ),\n    dataIndex: 'OU',\n    key: 'ou',\n    sorter: (a, b) => Number(b.OU) - Number(a.OU),\n    width: 60,\n    render: (val) => (\n      <div\n      style=\n        {\n          {\n            backgroundColor: getColorForValueForOU(val),\n            textAlign: 'center',\n            opacity: '0.75',\n            width: '100%'\n          }\n        }\n      >\n        { val }\n      </div>\n    )\n  },\n  {\n    title: (\n      <Tooltip placement=\"top\" title={\"Projected amount team will win or lose by (favored team is negative)\"}>\n        <span>Sprd</span>\n      </Tooltip>\n    ),\n    dataIndex: 'Spread',\n    key: 'spread',\n    width: 60,\n  },\n  {\n    title: (\n      <Tooltip placement=\"top\" title={\"Projected total points for the team\"}>\n        <span>Pts</span>\n      </Tooltip>\n    ),\n    dataIndex: 'ImpPts',\n    key: 'currImpPt',\n    sorter: (a, b) => Number(b.ImpPts) - Number(a.ImpPts),\n    width: 60,\n    render: (val) => (\n      <div\n      style=\n        {\n          {\n            backgroundColor: getColorForValueForImpPts(val),\n            textAlign: 'center',\n            opacity: '0.75',\n            width: '100%'\n          }\n        }\n      >\n        { val }\n      </div>\n    )\n  }\n]\n\nconst teamContraints = (onTeamStacksChange, onChangeAllTeamStackOption) => [\n  {\n    title: (\n      <div>\n        <Tooltip placement=\"top\" title={\"Min/Max total players from this team in the same lineup\"}>\n          <span>Total Players</span>\n        </Tooltip>\n        <div>\n          <StyledInputNumber\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('TotalMinPlayers', Number(e.target.value))}\n          ></StyledInputNumber>\n          <StyledInputNumber\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('TotalMaxPlayers', Number(e.target.value))}\n          ></StyledInputNumber>\n        </div>\n      </div>\n    ),\n    key: 'totalPlayers',\n    render: (_, row) => {\n      return (\n        <Input.Group compact>\n          <NumberInput row={row} _var={'TotalMinPlayers'} _onChange={onTeamStacksChange} />\n          <NumberInput row={row} _var={'TotalMaxPlayers'} _onChange={onTeamStacksChange} />\n        </Input.Group>\n      )\n    }\n  },\n  {\n    title: (\n      <div>\n        <Tooltip placement=\"top\" title={\"Min/Max RBs in the same lineup\"}>\n          <span>Total RBs</span>\n        </Tooltip>\n        <div>\n          <StyledInputNumber\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('TotalMinRBs', Number(e.target.value))}\n          ></StyledInputNumber>\n          <StyledInputNumber\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('TotalMaxRBs', Number(e.target.value))}\n          ></StyledInputNumber>\n        </div>\n      </div>\n    ),\n    key: 'totalRBs',\n    render: (_, row) => {\n      return (\n        <Input.Group compact>\n          <NumberInput row={row} _var={'TotalMinRBs'} _onChange={onTeamStacksChange} />\n          <NumberInput row={row} _var={'TotalMaxRBs'} _onChange={onTeamStacksChange} />\n        </Input.Group>\n      )\n    }\n  },\n  {\n    title: (\n      <div>\n        <Tooltip placement=\"top\" title={\"Min/Max WRs in the same lineup\"}>\n          <span>Total WRs</span>\n        </Tooltip>\n        <div>\n          <StyledInputNumber\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('TotalMinWRs', Number(e.target.value))}\n          ></StyledInputNumber>\n          <StyledInputNumber\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('TotalMaxWRs', Number(e.target.value))}\n          ></StyledInputNumber>\n        </div>\n      </div>\n    ),\n    key: 'totalWRs',\n    render: (_, row) => {\n      return (\n        <Input.Group compact>\n          <NumberInput row={row} _var={'TotalMinWRs'} _onChange={onTeamStacksChange} />\n          <NumberInput row={row} _var={'TotalMaxWRs'} _onChange={onTeamStacksChange} />\n        </Input.Group>\n      )\n    }\n  },\n  {\n    title: (\n      <div>\n        <Tooltip placement=\"top\" title={\"Min/Max TEs in the same lineup\"}>\n          <span>Total TEs</span>\n        </Tooltip>\n        <div>\n          <StyledInputNumber\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('TotalMinTEs', Number(e.target.value))}\n          ></StyledInputNumber>\n          <StyledInputNumber\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('TotalMaxTEs', Number(e.target.value))}\n          ></StyledInputNumber>\n        </div>\n      </div>\n    ),\n    key: 'totalTEs',\n    render: (_, row) => {\n      return (\n        <Input.Group compact>\n          <NumberInput row={row} _var={'TotalMinTEs'} _onChange={onTeamStacksChange} />\n          <NumberInput row={row} _var={'TotalMaxTEs'} _onChange={onTeamStacksChange} />\n        </Input.Group>\n      )\n    }\n  },\n  {\n    title: (\n      <div>\n        <Tooltip placement=\"top\" title={\"Min/Max players from this team in the Flex\"}>\n          <span>Total Flex</span>\n        </Tooltip>\n        <div>\n          <StyledInputNumber\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('TotalMinFlex', Number(e.target.value))}\n          ></StyledInputNumber>\n          <StyledInputNumber\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('TotalMaxFlex', Number(e.target.value))}\n          ></StyledInputNumber>\n        </div>\n      </div>\n    ),\n    key: 'totalFlex',\n    render: (_, row) => {\n      return (\n        <Input.Group compact>\n          <NumberInput row={row} _var={'TotalMinFlex'} _onChange={onTeamStacksChange} />\n          <NumberInput row={row} _var={'TotalMaxFlex'} _onChange={onTeamStacksChange} />\n        </Input.Group>\n      )\n    }\n  },\n  {\n    title: (\n      <div>\n        <Tooltip placement=\"top\" title={\"Salary range used for this team\"}>\n          <span>Total Salary</span>\n        </Tooltip>\n        <div>\n          <StyledInputNumberLong\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('MinTeamSal', Number(e.target.value))}\n          ></StyledInputNumberLong>\n          <StyledInputNumberLong\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('MaxTeamSal', Number(e.target.value))}\n          ></StyledInputNumberLong>\n        </div>\n      </div>\n    ),\n    key: 'totalSalary',\n    render: (_, row) => {\n      return (\n        <Input.Group compact>\n          <NumberInputLong row={row} _var={'MinTeamSal'} _onChange={onTeamStacksChange} />\n          <NumberInputLong row={row} _var={'MaxTeamSal'} _onChange={onTeamStacksChange} />\n        </Input.Group>\n      )\n    }\n  },\n  {\n    title: (\n      <div>\n        <Tooltip placement=\"top\" title={\"Salary range used for Flex spot from this team\"}>\n          <span>Flex Salary</span>\n        </Tooltip>\n        <div>\n          <StyledInputNumberLong\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('MinFlexSal', Number(e.target.value))}\n          ></StyledInputNumberLong>\n          <StyledInputNumberLong\n            placeholder=\"0\"\n            onChange={(e) => onChangeAllTeamStackOption('MaxFlexSal', Number(e.target.value))}\n          ></StyledInputNumberLong>\n        </div>\n      </div>\n    ),\n    key: 'totalFlexSalary',\n    className: 'divide',\n    render: (_, row) => {\n      return (\n        <Input.Group compact>\n          <NumberInputLong row={row} _var={'MinFlexSal'} _onChange={onTeamStacksChange} />\n          <NumberInputLong row={row} _var={'MaxFlexSal'} _onChange={onTeamStacksChange} />\n        </Input.Group>\n      )\n    }\n  },\n]\n\nconst stackingOptions = (onTeamStacksChange, onChangeAllTeamStackOption) => [\n    {\n      title: (\n        <div>\n          <Tooltip placement=\"top\" title={\"Set which teams can have a QB with no other flex positions from that team\"}>\n            <span>Naked QB</span>\n          </Tooltip>\n          <div>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowNakedQB', e.target.checked)}}\n            ></StyledCheckboxWhite>\n          </div>\n        </div>\n      ),\n      key: 'nakedQB',\n      width: 90,\n      render: (_, row) => {\n        return (\n          <CheckBoxInput row={row} _var={'AllowNakedQB'} _onChange={onTeamStacksChange} />\n        )\n      }\n    },\n    {\n      title: (\n        <div>\n          <Tooltip placement=\"top\" title={\"Set which teams can have a QB stacked with their teammates\"}>\n            <span>Team Stack</span>\n          </Tooltip>\n          <div>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowQBStack', e.target.checked)}}\n            ></StyledCheckboxWhite>\n          </div>\n        </div>\n      ),\n      key: 'qbStack',\n      width: 95,\n      render: (_, row) => {\n        return (\n          <CheckBoxInput row={row} _var={'AllowQBStack'} _onChange={onTeamStacksChange} />\n        )\n      }\n    },\n    {\n      title: (\n        <div>\n          <Tooltip placement=\"top\" title={\"If this team is selected to be stacked, set which positions from the team are allowed to be stacked with the QB\"}>\n            <span>Stack Pos.</span>\n          </Tooltip>\n          <div>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowRBStack', e.target.checked)}}\n            >RB</StyledCheckboxWhite>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowWRStack', e.target.checked)}}\n            >WR</StyledCheckboxWhite>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowTEStack', e.target.checked)}}\n            >TE</StyledCheckboxWhite>\n          </div>\n        </div>\n      ),\n      key: 'stackPos',\n      width: 165,\n      render: (_, row) => {\n        return (\n          <div>\n            <CheckBoxInput row={row} _var={'AllowRBStack'} _onChange={onTeamStacksChange}>RB</CheckBoxInput>\n            <CheckBoxInput row={row} _var={'AllowWRStack'} _onChange={onTeamStacksChange}>WR</CheckBoxInput>\n            <CheckBoxInput row={row} _var={'AllowTEStack'} _onChange={onTeamStacksChange}>TE</CheckBoxInput>\n          </div>\n        )\n      }\n    },\n    {\n      title: (\n        <div>\n          <Tooltip placement=\"top\" title={\"If this team is selected to be stacked, set the range of flex players that are allowed\"}>\n            <span>Stacked Players</span>\n          </Tooltip>\n          <div>\n            <StyledInputNumber\n              placeholder=\"0\"\n              onChange={(e) => onChangeAllTeamStackOption('MinStack', Number(e.target.value))}\n            ></StyledInputNumber>\n            <StyledInputNumber\n              placeholder=\"0\"\n              onChange={(e) => onChangeAllTeamStackOption('MaxStack', Number(e.target.value))}\n            ></StyledInputNumber>\n          </div>\n        </div>\n      ),\n      key: 'stackedPlayers',\n      render: (_, row) => {\n        return (\n          <Input.Group compact>\n            <NumberInput row={row} _var={'MinStack'} _onChange={onTeamStacksChange} />\n            <NumberInput row={row} _var={'MaxStack'} _onChange={onTeamStacksChange} />\n          </Input.Group>\n        )\n      }\n    },\n    {\n      title: (\n        <div>\n          <Tooltip placement=\"top\" title={\"Set the max flex you want for the team if not included in a stack. E.g. If you want to pair two WRs with a QB, but you don't want to play both WRs without the QB, input 1.\"}>\n            <span>Max Flex No Stack</span>\n          </Tooltip>\n          <div>\n            <StyledInputNumber\n              placeholder=\"0\"\n              onChange={(e) => onChangeAllTeamStackOption('MaxFlexIfNoStack', Number(e.target.value))}\n            ></StyledInputNumber>\n          </div>\n        </div>\n      ),\n      key: 'maxFlexIfNoStack',\n      render: (_, row) => {\n        return (\n          <NumberInput row={row} _var={'MaxFlexIfNoStack'} _onChange={onTeamStacksChange} />\n        )\n      }\n    },\n    {\n      title: (\n        <div>\n          <Tooltip placement=\"top\" title={\"Set teams that can have a QB stacked with teammates and an opposing player\"}>\n            <span>Game Stack</span>\n          </Tooltip>\n          <div>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowGameStack', e.target.checked)}}\n            ></StyledCheckboxWhite>\n          </div>\n        </div>\n      ),\n      key: 'gameStack',\n      render: (_, row) => {\n        return (\n          <CheckBoxInput row={row} _var={'AllowGameStack'} _onChange={onTeamStacksChange} />\n        )\n      }\n    },\n    {\n      title: (\n        <div>\n          <Tooltip placement=\"top\" title={\"If this game is selected to be stacked, set the flex posisions from the opposing team that can be included\"}>\n            <span>Opp. Stack Pos</span>\n          </Tooltip>\n          <div>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowRBOppStack', e.target.checked)}}\n            >RB</StyledCheckboxWhite>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowWROppStack', e.target.checked)}}\n            >WR</StyledCheckboxWhite>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowTEOppStack', e.target.checked)}}\n            >TE</StyledCheckboxWhite>\n          </div>\n        </div>\n      ),\n      key: 'oppStackPos',\n      width: 165,\n      render: (_, row) => {\n        return (\n          <div>\n            <CheckBoxInput row={row} _var={'AllowRBOppStack'} _onChange={onTeamStacksChange}>RB</CheckBoxInput>\n            <CheckBoxInput row={row} _var={'AllowWROppStack'} _onChange={onTeamStacksChange}>WR</CheckBoxInput>\n            <CheckBoxInput row={row} _var={'AllowTEOppStack'} _onChange={onTeamStacksChange}>TE</CheckBoxInput>\n          </div>\n        )\n      }\n    },\n    {\n      title: (\n        <div>\n          <Tooltip placement=\"top\" title={\"Allow this team to be used in a secondary game stack.\"}>\n            <span>Secondary Game Stack</span>\n          </Tooltip>\n          <div>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowSecondaryStack', e.target.checked)}}\n            ></StyledCheckboxWhite>\n          </div>\n        </div>\n      ),\n      key: 'allowSecondaryStack',\n      render: (_, row) => {\n        return (\n          <CheckBoxInput row={row} _var={'AllowSecondaryStack'} _onChange={onTeamStacksChange} />\n        )\n      }\n    },\n    {\n      title: (\n        <div>\n          <Tooltip placement=\"top\" title={\"Allow the teams RB to be stacked with DST.\"}>\n            <span>Allow RB + DST Stack</span>\n          </Tooltip>\n          <div>\n            <StyledCheckboxWhite\n              defaultChecked={true}\n              onClick={(e) =>{onChangeAllTeamStackOption('AllowRBandDSTStack', e.target.checked)}}\n            ></StyledCheckboxWhite>\n          </div>\n        </div>\n      ),\n      key: 'allowRBandDSTStack',\n      render: (_, row) => {\n        return (\n          <CheckBoxInput row={row} _var={'AllowRBandDSTStack'} _onChange={onTeamStacksChange} />\n        )\n      }\n    },\n  ]\n\nclass StackTable extends Component {\n  state = {\n    toggle: this.props.showdown ? 1 : 0\n  }\n\n  render() {\n    const extraCols = [\n      stackingOptions(this.props.onChangeHandler, this.props.onChangeAllTeamStackOption),\n      teamContraints(this.props.onChangeHandler, this.props.onChangeAllTeamStackOption)\n    ][this.state.toggle]\n\n    return (\n      <TeamStackOptions>\n        <ToggleHeader>\n          <Row>\n            <Col lg={12}>\n              <Menu onClick={(e) => this.setState({\n                  toggle: e.key\n                })} selectedKeys={[String(this.state.toggle)]} mode=\"horizontal\">\n                <Menu.Item disabled={this.props.showdown} key={0}><Tooltip placement={'top'} title={'Configure stacking positions given there is a Team Stack or Game Stack'}>Stacking Options</Tooltip></Menu.Item>\n                <Menu.Item key={1}><Tooltip placement={'top'} title={'Set global Min/Max settings for an entire team'}>Team Constraints</Tooltip></Menu.Item>\n              </Menu>\n            </Col>\n            <StyledButtonCol lg={12}>\n              <div style={{float: 'right'}}>\n                <Popconfirm\n                  cancelText=\"No\"\n                  okText=\"Yes\"\n                  onClick={(e) => e.stopPropagation()}\n                  onCancel={(e) => e.stopPropagation()}\n                  onConfirm={\n                    (e) => {\n                      e.stopPropagation()\n                      this.props.clearStackSettings()\n                    }\n                  }\n                  title={`Permenantly clear all settings for this slate?`}\n                >\n                  <Button>Reset Team Stacks to Defaults</Button>\n                </Popconfirm>\n                <Button\n                  onClick={this.props.uncheckStackingOptions}\n                  style={{marginLeft: '20px', marginRight: '20px'}}\n                >Uncheck all Stacking Options</Button>\n              </div>\n            </StyledButtonCol>\n          </Row>\n        </ToggleHeader>\n        <StyledTable\n          columns={teamGameData.concat(extraCols)}\n          dataSource={this.props.rows}\n          pagination={{ pageSize: 50 }}\n          scroll={{ y: 650, x: 1400 }}\n          bordered\n          loading={this.props.loading}\n          size='small'\n          rowKey={_row => String(_row.TeamAbbrev)}\n        />\n    </TeamStackOptions>\n    )\n  }\n}\n\nexport default StackTable\n","import { Tooltip, Row, Col, Input, Checkbox } from 'antd'\nimport styled from 'styled-components'\n\nconst InputLabel = styled.div`\n  font-weight: 600;\n  font-size: 14px;\n`\nconst SettingsInput = styled(Input)`\n  .ant-input-group-addon {\n    @media (max-width: 1280px) {\n      font-size: 12px;\n    }\n  }\n`\nconst InputContainer = styled.div`\n  padding: 20px;\n`\n// warning div red text\nconst WarningDiv = styled.div`\n  color: red;\n  font-size: 12px;\n  font-weight: 300;\n  margin-lef: 5px;\n`\n\nexport default ({ updateInputValue, settings, showdown, disabled }) => {\n  return (\n    <Row>\n      <Col lg={10}>\n        {\n          !showdown ? (\n            <div>\n              <SettingsInput\n                disabled={disabled}\n                style={{margin: '10px 0px'}}\n                addonBefore={(\n                  <Tooltip placement={'top'} title={'This sets the percentage of lineups allowed to have an RB in the QB stack. Does not force RB in stacks, but rather gives a way to set a limit on RB stacks.'}>\n                    Allow RB Stack Percentage\n                  </Tooltip>\n                )}\n                addonAfter=\"%\"\n                value={(settings.data.allowRBStackPct * 100).toFixed(0)}\n                key='allowRBStackPct'\n                onChange={evt => updateInputValue('allowRBStackPct', Number(Number(evt.target.value) / 100))}\n              />\n              <SettingsInput\n                disabled={disabled}\n                style={{marginBottom: '10px'}}\n                addonBefore={(\n                  <Tooltip placement={'top'} title={'Percentage of Lineups that will have a second game stack of two players who aren\\'t in the same game as your QB.'}>\n                    Forced Second Game Stack\n                  </Tooltip>\n                )}\n                addonAfter=\"%\"\n                value={(settings.data.forceSecondGameStack * 100).toFixed(0)}\n                key='forceSecondGameStack'\n                onChange={evt => updateInputValue('forceSecondGameStack', Number(Number(evt.target.value) / 100))}\n              />\n              {\n                showdown ? '' : (\n                  <div>\n                    <SettingsInput\n                      disabled={disabled}\n                      style={{marginBottom: '10px'}}\n                      addonBefore={(\n                        <Tooltip placement={'top'} title={'Percentage of Lineups that will have a second game stack of two players who aren\\'t in the same game as your QB.'}>\n                          Forced RB + DST Stack\n                        </Tooltip>\n                      )}\n                      addonAfter=\"%\"\n                      value={(settings.data.forceRBandDSTStack * 100).toFixed(0)}\n                      key='forceRBandDSTStack'\n                      onChange={evt => updateInputValue('forceRBandDSTStack', Number(Number(evt.target.value) / 100))}\n                    />\n                    {\n                      settings.data.forceRBandDSTStack * 100 > 25 ? (\n                        <div>\n                          <WarningDiv>Warning: Forcing >25% RB/DST stack could significantly increase build time.</WarningDiv>\n                        </div>\n                      ) : ''\n                    } \n                  </div>\n                )\n              }\n              \n          </div>\n          ) : ''\n        }\n      </Col>\n      <Col lg={10} offset={4}>\n        {\n          !showdown ? (\n            <div>\n              <InputContainer>\n                <Row>\n                  <Col lg={12}>\n                    <InputLabel style={{display: 'inline-block', marginRight: '10px'}}>Allow Defense vs QB</InputLabel>\n                    <Checkbox\n                      disabled={disabled}\n                      checked={settings.data.allowDefenseVsQB}\n                      onClick={(e) => {\n                        updateInputValue('allowDefenseVsQB', e.target.checked)}\n                      }\n                    />\n                  </Col>\n                  <Col lg={12}>\n                    <InputLabel style={{display: 'inline-block', marginRight: '10px'}}>Allow Defense vs Flex</InputLabel>\n                    <Checkbox\n                      disabled={disabled}\n                      checked={settings.data.allowDefenseVsFlex}\n                      onClick={(e) => {\n                        updateInputValue('allowDefenseVsFlex', e.target.checked)}\n                      }\n                    />\n                  </Col>\n                </Row>\n              </InputContainer>\n            </div>\n          ) : (\n            <div>\n              <InputContainer>\n                <Row>\n                  <Col lg={8}>\n                    <InputLabel style={{display: 'inline-block', marginRight: '10px'}}>Allow Defense vs QB</InputLabel>\n                    <Checkbox\n                      disabled={disabled}\n                      checked={settings.data.allowDefenseVsQB}\n                      onClick={(e) => {\n                        updateInputValue('allowDefenseVsQB', e.target.checked)}\n                      }\n                    />\n                  </Col>\n                  <Col lg={8}>\n                    <InputLabel style={{display: 'inline-block', marginRight: '10px'}}>Allow Defense vs Flex</InputLabel>\n                    <Checkbox\n                      disabled={disabled}\n                      checked={settings.data.allowDefenseVsFlex}\n                      onClick={(e) => {\n                        updateInputValue('allowDefenseVsFlex', e.target.checked)}\n                      }\n                    />\n                  </Col>\n                  <Col lg={8}>\n                    <InputLabel style={{display: 'inline-block', marginRight: '10px'}}>Allow Defense vs Kicker</InputLabel>\n                    <Checkbox\n                      disabled={disabled}\n                      checked={settings.data.allowDefenseVsKicker}\n                      onClick={(e) => {\n                        updateInputValue('allowDefenseVsKicker', e.target.checked)}\n                      }\n                    />\n                  </Col>\n                </Row>\n              </InputContainer>\n            </div>\n          )\n        }\n      </Col>\n    </Row>\n  )\n}\n","import { Tooltip, Row, Col, Input, Checkbox } from 'antd'\nimport styled from 'styled-components'\n\nimport getBasicStacksFromAdvanced from '../../../../utils/get-basic-stacks-from-advanced'\n\nconst InputLabel = styled.div`\n  font-weight: 600;\n  font-size: 14px;\n`\nconst SettingsInput = styled(Input)`\n  .ant-input-group-addon {\n    @media (max-width: 1280px) {\n      font-size: 12px;\n    }\n  }\n`\nconst InputContainer = styled.div`\n  padding: 20px;\n`\n\nexport default ({ updateInputValue, settings, showdown, disabled }) => {\n  return (\n    <Row>\n      <Col lg={10}>\n        {\n          !showdown ? (\n            <div>\n              <SettingsInput\n                disabled={disabled}\n                style={{marginTop: '10px'}}\n                addonBefore={(\n                  <Tooltip placement={'top'} title={'This sets the target percentage of lineups that will have a QB with at least 1 desired flex position from the same team (configure in Team Stack Table below)'}>\n                    Team Stack Percentage\n                  </Tooltip>\n                )}\n                addonAfter=\"%\"\n                value={(settings.data.teamStackPct * 100).toFixed(0)}\n                key='teamStackPct'\n                onChange={evt => updateInputValue('teamStackPct', Number(Number(evt.target.value) / 100))}\n              />\n              <SettingsInput\n                disabled={disabled}\n                style={{margin: '10px 0px 0px 10%', width: '90%'}}\n                addonBefore={(\n                  <Tooltip placement={'top'} title={'Percentage of Lineups that will have a Game Stack (opposing players will be part of the stack)'}>\n                    Game Stack Percentage\n                  </Tooltip>\n                )}\n                addonAfter=\"%\"\n                value={(settings.data.gameStackPct * 100).toFixed(0)}\n                key='gameStackPct'\n                onChange={evt => updateInputValue('gameStackPct', Number(Number(evt.target.value) / 100))}\n              />\n              <SettingsInput\n                disabled={disabled}\n                style={{margin: '10px 0px 0px 10%', width: '90%'}}\n                addonBefore={(\n                  <Tooltip placement={'top'} title={'This sets the target percentage of lineups that will have a QB with at least 2 desired flex position from the same team (configure in Team Stack Table below)'}>\n                    Force 2 Flex Percentage\n                  </Tooltip>\n                )}\n                addonAfter=\"%\"\n                value={(settings.data.force2FlexStck * 100).toFixed(0)}\n                key='force2FlexStck'\n                onChange={evt => updateInputValue('force2FlexStck', Number(Number(evt.target.value) / 100))}\n              />\n          </div>\n          ) : ''\n        }\n      </Col>\n      <Col lg={10} offset={4}>\n        {\n          !showdown ? (\n            <div>\n              <SettingsInput\n                disabled={disabled}\n                style={{marginTop: '10px'}}\n                addonBefore={(\n                  <Tooltip placement={'top'} title={'Percentage of Lineups that will be forced to have no stack. Note: if Team Stack + No Stack is less than 100%, the optimizer will choose whichever setting is more optimal.'}>\n                    Forced No Stack Percentage\n                  </Tooltip>\n                )}\n                addonAfter=\"%\"\n                value={(settings.data.noStackPct * 100).toFixed(0)}\n                key='noStackPct'\n                onChange={evt => updateInputValue('noStackPct', Number(Number(evt.target.value) / 100))}\n              />\n            </div>\n          ) : (\n            ''\n          )\n        }\n      </Col>\n    </Row>\n  )\n}\n","export default (key, row) => {\n  // is key team or opp\n  const isTeam = key.indexOf('team') >= 0\n  const position = getPositionFromKey(key)\n  const isMin = key.indexOf('Min') >= 0\n\n  const checkAgainst = Number(row[key])\n  const converseVal = Number(row[getConverseKey(isTeam, position, isMin)])\n\n  // if any min or max is greater than 7\n  if (checkAgainst > 7) return true\n\n  // check to make sure val is ok against converse\n  if (isMin) {\n    if (checkAgainst > converseVal) return true\n  } else {\n    if (checkAgainst < converseVal) return true\n  }\n\n  if (position === 'Flex') {\n    // check sum\n    const [ min, max ] = getFlexMinMax(row, isTeam)\n\n    if (isMin && checkAgainst > max) return true\n\n    if (!isMin && checkAgainst < min) {\n      return true\n    }\n  }\n\n  return false\n}\n\nconst getPositionFromKey = (k) => {\n  const positions = ['RB', 'WR', 'TE', 'Flex']\n  let selectedPos = ''\n\n  positions.forEach(p => {\n    if (k.indexOf(p) >= 0) {\n      selectedPos = p\n      return p\n    }\n  })\n\n  return selectedPos\n}\n\nconst getConverseKey = (isTeam, position, isMin) => {\n  let k = ''\n  if (isTeam)\n    k += 'team'\n  else\n    k += 'opp'\n\n  k += position\n\n  if (isMin)\n    k += 'Max'\n  else\n    k += 'Min'\n\n  return k\n}\n\nconst getFlexMinMax = (row, isTeam) => {\n  let min = 0\n  let max = 0\n  const positions = ['RB', 'WR', 'TE']\n  let prefix = isTeam ? 'team' : 'opp'\n\n  positions.forEach(p => {\n    const _min = Number(row[`${prefix}${p}Min`])\n    const _max = Number(row[`${prefix}${p}Max`])\n\n    min += _min\n    max += _max\n  })\n\n  return [ min, max ]\n}\n","import { Table, Row, Col, Input, Tag } from 'antd'\nimport React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nimport {\n  DeleteOutlined,\n  PlusCircleOutlined\n} from '@ant-design/icons'\n\nimport { getAdvancedRowsFromBasic } from '../../../../utils/specific-stacks'\nimport hasErrors from './utils/errors'\n\nconst StyledTable = styled(Table)`\n  td {\n    text-align: center;\n    padding: 2px !important;\n  }\n\n  tr th {\n    text-align: center !important;\n    font-size: 13px;\n  }\n\n  tr:first-child {\n    th {\n      color: white !important;\n      background: #556672 !important;\n    }\n  }\n\n  tr.ant-table-row-level-0:hover > td {\n    background: #e6f7ff !important;\n  }\n\n  *, *:before, *:after {\n    -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;\n  }\n\n  .divide {\n    border-right: 1px solid #556672 !important;\n  }\n\n  .error {\n    font-weight: 500;\n    color: red;\n  }\n\n  .freq-divide {\n    input {\n      border-right: 1px solid #556672 !important;\n    }\n  }\n\n  input {\n    text-align: center;\n  }\n`\nconst PlusCircleDiv = styled.div`\n  text-align: center;\n  width: 100%;\n  font-size: 22px;\n  margin-top: 15px;\n`\n\nconst StyledPlusCircle = styled(PlusCircleOutlined)`\n  cursor: pointer;\n  color: #1890ff !important;\n`\n\nconst StyledNameInput = styled(Input)`\n  display: inline-block;\n  width: 70% !important;\n  margin-left: 5px !important;\n  font-size: 10px;\n`\n\nconst NoSelect = styled.span`\n  -webkit-user-select: none; /* Safari */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* IE10+/Edge */\n  user-select: none; /* Standard */\n`\n\nconst rowValsTeamStack = {\n  'teamFlexMin': 'Min Flex',\n  'teamFlexMax': 'Max Flex',\n  'teamRBMin': 'RB Min',\n  'teamRBMax': 'RB Max',\n  'teamWRMin': 'WR Min',\n  'teamWRMax': 'WR Max',\n  'teamTEMin': 'TE Min',\n  'teamTEMax': 'TE Max'\n}\nconst rowValsGameStack = {\n  'oppFlexMin': 'Opp. Min Flex',\n  'oppFlexMax': 'Opp. Max Flex',\n  'oppRBMin': 'Opp. RB Min',\n  'oppRBMax': 'Opp. RB Max',\n  'oppWRMin': 'Opp. WR Min',\n  'oppWRMax': 'Opp. WR Max',\n  'oppTEMin': 'Opp. TE Min',\n  'oppTEMax': 'Opp. TE Max',\n}\n\nconst cols = (updateSpecificStackValue, removeSpecificStackRow, disabled) => {\n  const teamStackCols = []\n  Object.keys(rowValsTeamStack).forEach(key => {\n    teamStackCols.push(\n      {\n        title: rowValsTeamStack[key],\n        dataIndex: key,\n        key: key,\n        render: (val, row) => {\n          let fontWeight = 200\n\n          if (key.indexOf('Min') > 0 && Number(val) > 0)\n            fontWeight = 600\n          else if (key.indexOf('Max') > 0 && Number(val) !== 7)\n            fontWeight = 600\n\n          let className = ''\n          if (key.indexOf('Max') > 0)\n            className = 'divide'\n\n          if (hasErrors(key, row))\n            className = 'error'\n\n          return (\n            <Input\n              className={className}\n              style={{fontWeight}}\n              value={Number(val)}\n              onChange={(e) => {updateSpecificStackValue(key, Number(e.target.value), row.index)}}\n              disabled={row.disabled || disabled}\n            />\n          )\n        }\n      },\n    )\n  })\n  const gameStackCols = []\n  Object.keys(rowValsGameStack).forEach(key => {\n    gameStackCols.push(\n      {\n        title: rowValsGameStack[key],\n        dataIndex: key,\n        key: key,\n        render: (val, row) => {\n          let fontWeight = 200\n\n          if (key.indexOf('Min') > 0 && Number(val) > 0)\n            fontWeight = 600\n          else if (key.indexOf('Max') > 0 && Number(val) !== 7)\n            fontWeight = 600\n\n          let className = ''\n          if (key.indexOf('Max') > 0)\n            className = 'divide'\n\n          if (hasErrors(key, row))\n            className = 'error'\n\n          return (\n            <Input\n              className={className}\n              style={{fontWeight}}\n              value={Number(val)}\n              onChange={(e) => {updateSpecificStackValue(key, Number(e.target.value), row.index)}}\n              disabled={row.disabled || disabled}\n            />\n          )\n        }\n      },\n    )\n  })\n\n  return [\n    {\n      title: '',\n      key: 'freqhead',\n      children: [\n        {\n          title: 'Label',\n          dataIndex: 'label',\n          key: 'label',\n          render: (v, row) => {\n            if (row.edit)\n              return (\n                <StyledNameInput\n                  placeholder={'add label...'}\n                  type=\"text\"\n                  autoFocus\n                  onBlur={(e) => {\n                    updateSpecificStackValue(['label', 'edit'], [e.target.value || v || '-', false], row.index, true)\n                  }}\n                />\n              )\n\n            return (\n              <div\n                onDoubleClick={() => {\n                  updateSpecificStackValue('edit', true, row.index)\n                }}\n              >\n                <Tag><NoSelect>{v}</NoSelect></Tag>\n              </div>\n            )\n          }\n        },\n        {\n          title: 'Freq. (%)',\n          dataIndex: 'freq',\n          key: 'freq',\n          className: 'freq-divide',\n          render: (val, row) => {\n            return (\n              <Input value={((Number(val) * 100)).toFixed(0)} onChange={(e) => {updateSpecificStackValue('freq', Number((Number(e.target.value || 0) / 100))|| 0, row.index)}} disabled={row.disabled || disabled} />\n            )\n          },\n        }\n      ],\n    },\n    {\n      title: 'Team Stacks',\n      key: 'teamstacks',\n      children: teamStackCols\n    },\n    {\n      title: 'Game Stacks',\n      key: 'gamestacks',\n      children: gameStackCols\n    },\n    {\n      title: '',\n      key: 'deletehead',\n      children: [{\n        render: (row) => {\n            if (!row.disabled && !disabled)\n              return (<span><DeleteOutlined onClick={() => {removeSpecificStackRow(row.index)}}/></span>)\n        }\n      }],\n    },\n\n  ]\n}\n\nexport default ({ settings, addSpecificStackRow, removeSpecificStackRow, updateSpecificStackValue, disabled }) => {\n  const sanitizedSpecificStackData = sanitizeSpecificStacks(settings.data.specificStacks)\n\n  return (\n    <div>\n      <StyledTable\n        bordered={true}\n        columns={cols(updateSpecificStackValue, removeSpecificStackRow, disabled)}\n        dataSource={sanitizedSpecificStackData}\n        pagination={false}\n        scroll={{ x: 1300 }}\n      />\n    <PlusCircleDiv>\n      <StyledPlusCircle onClick={() => {\n        if (!disabled)\n          addSpecificStackRow()\n        }\n      }/>\n    </PlusCircleDiv>\n    </div>\n  )\n}\n\nconst sanitizeSpecificStacks = (specificStacks) => {\n  const _sanitizedStacks = []\n  specificStacks.forEach((s, i) => {\n    const _s = { ...s }\n    _s.index = i\n    _sanitizedStacks.push(_s)\n  })\n\n  return _sanitizedStacks\n}\n","import React, { Component } from 'react'\nimport { Row, Col, Card, Input, Tooltip, Checkbox, Switch, Button, Popconfirm } from 'antd'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport {\n  CrownOutlined, CheckOutlined\n} from '@ant-design/icons'\n\nimport * as lineupActions from '../../../../actions/lineup'\n\nimport TeamStacksTable from './stack-table'\nimport mergeOrderTeamStacks from '../../../../utils/merge-order-team-stacks'\nimport { nflTeamNames } from '../../../../utils/team-name-to-abbrev'\nimport { initialRow, getEmptyStack, getDefaultSpecificStacks, getMaxFreq } from '../../../../utils/specific-stacks'\nimport { cache_settings } from '../../../../utils/sport-settings'\nimport FakurianDesign from '../../../../assets/images/backgrounds/fakurian-design-light.png'\nimport NewBanner from '../../../../components/new-banner'\n\nimport GeneralStackSettings from './general-stack-settings'\nimport BasicStackSettings from './basic-stack-settings'\nimport AdvancedStackSettings from './advanced-stack-settings'\n\nimport './Settings.css'\n\n\nconst StyledSwitch = styled(Switch)`\n  margin-top: 20px !important;\n`\nconst SwitchCol = styled(Col)`\n  .ant-switch {\n    background-color: #1890ff;\n    background-image: none;\n  }\n  .ant-switch-checked {\n    background-color: #ffa500;\n  }\n`\nconst SettingsContainer = styled.div`\n  max-height: 1500px;\n  overflow-y: scroll;\n`\nconst HeadingCard = styled(Card)`\n  &.ant-card {\n    border-top-right-radius: 25px;\n    border-top-left-radius: 25px;\n  }\n`\nconst InputLabel = styled.div`\n  font-weight: 600;\n  font-size: 14px;\n`\nconst SettingsInput = styled(Input)`\n  .ant-input-group-addon {\n    @media (max-width: 1280px) {\n      font-size: 12px;\n    }\n  }\n`\nconst InputContainer = styled.div`\n  padding: 20px;\n`\nconst StyledEnableButton = styled(Button)`\n  float: right;\n`\nconst EnableDiv = styled.div`\n  float: right;\n`\n\nclass Settings extends Component {\n  static propTypes = {\n    // Redux State goes here\n    fetchOpt: PropTypes.func.isRequired,\n    updateSettings: PropTypes.func.isRequired,\n    updateTeamStacks: PropTypes.func.isRequired\n  }\n\n  state = {\n    stackSettingMode: this.props.settings.data.stackSettingMode,\n    showPresetsActive: false\n  }\n\n  onTeamStacksChange(rowData) {\n    const teamStacks = this.props.teamStacks.data\n\n    const _teamStacks = teamStacks.map(stack => {\n      if (stack.TeamAbbrev === rowData.TeamAbbrev) {\n        return rowData\n      }\n      if (stack.TeamAbbrev === rowData.Opp) {\n        if (stack.AllowSecondaryStack !== rowData.AllowSecondaryStack) {\n          const _stack = {\n            ...stack\n          }\n          _stack.AllowSecondaryStack = rowData.AllowSecondaryStack\n          return _stack\n        }\n      }\n      return stack\n    })\n\n    this.props.updateTeamStacks({\n      _teamStacks,\n      rowData,\n      slate: this.props.slate,\n      site: this.props.site,\n      sport: 'nfl',\n      counter: this.props.week,\n      season: this.props.season\n    })\n  }\n\n  async onChangeAllTeamStackOption(rowKey, val) {\n    const teamStacks = this.props.teamStacks.data\n\n    const _teamStacks = await Promise.all(teamStacks.map(stack => {\n      return {\n        ...stack,\n        [rowKey]: val\n      }\n    }))\n\n    this.props.updateTeamStacks({\n      _teamStacks,\n      rowData: [],\n      slate: this.props.slate,\n      site: this.props.site,\n      sport: 'nfl',\n      counter: this.props.week, \n      season: this.props.season\n    })\n  }\n\n  uncheckStackingOptions() {\n    const booleanKeys = ['AllowNakedQB', 'AllowQBStack', 'AllowRBStack', 'AllowWRStack', 'AllowTEStack', 'AllowGameStack', 'AllowRBOppStack', 'AllowWROppStack', 'AllowTEOppStack', 'AllowSecondaryStack']\n\n    const _teamStacks = this.props.teamStacks.data\n    const teamStacks = _teamStacks.map(stack => {\n      const _newStack = { ...stack }\n      booleanKeys.forEach(_key => {\n        _newStack[_key] = false\n      })\n\n      return _newStack\n    })\n\n    this.props.updateTeamStacks({\n      _teamStacks: teamStacks,\n      rowData: teamStacks, // Batch update\n      slate: this.props.slate,\n      site: this.props.site,\n      sport: 'nfl',\n      counter: this.props.week, \n      season: this.props.season\n    })\n  }\n\n  updateInputValue = (key, val) => {\n    this.props.updateSettings( { \n      site: this.props.site, \n      slate: this.props.slate, \n      [key]: val, \n      sport: 'nfl',\n      counter: this.props.week, \n      season: this.props.season\n     } )\n  }\n\n  updateSpecificStackValue = (key, val, rowIndex, bulk=false) => {\n    // deep clone\n    const _specificStacks = JSON.parse(JSON.stringify(this.props.settings.data.specificStacks))\n    if (bulk) {\n      key.forEach((k, i) => {\n        _specificStacks[rowIndex][k] = val[i]\n      })\n    } else {\n      _specificStacks[rowIndex][key] = val\n    }\n\n    if (key === 'freq') {\n      const maxFreq = getMaxFreq(this.props.settings.data.specificStacks, rowIndex)\n\n      if (Number(val) > maxFreq) {\n        _specificStacks[rowIndex][key] = maxFreq\n      }\n    }\n\n    // update empty stack\n    _specificStacks[0] = getEmptyStack(_specificStacks)\n\n    this.props.updateSettings( { site: this.props.site, slate: this.props.slate, specificStacks: _specificStacks, sport: 'nfl', counter: this.props.week, season: this.props.season } )\n\n    // cache_settings('nfl', this.props.site, this.props.slate, {\n    //   specificStacks: _specificStacks\n    // })\n  }\n\n  removeSpecificStackRow = (index) => {\n    const _specificStacks = JSON.parse(JSON.stringify(this.props.settings.data.specificStacks))\n    _specificStacks.splice(index, 1)\n\n    // update empty stack\n    _specificStacks[0] = getEmptyStack(_specificStacks)\n\n    this.props.updateSettings( { site: this.props.site, slate: this.props.slate, specificStacks: _specificStacks, sport: 'nfl', counter: this.props.week, season: this.props.season } )\n\n    // cache_settings('nfl', this.props.site, this.props.slate, {\n    //   specificStacks: _specificStacks\n    // })\n  }\n\n  addSpecificStackRow = () => {\n    const _specificStacks = [...this.props.settings.data.specificStacks]\n    const _newStack = {...initialRow}\n    _newStack.edit = true\n    _specificStacks.push(_newStack)\n\n    this.props.updateSettings( { site: this.props.site, slate: this.props.slate, specificStacks: _specificStacks, sport: 'nfl', counter: this.props.week, season: this.props.season } )\n\n    // cache_settings('nfl', this.props.site, this.props.slate, {\n    //   specificStacks: _specificStacks\n    // })\n  }\n\n  updateSpecificStacksFromBasic = (basicSettings) => {\n    const _specificStacks = getAdvancedRowsFromBasic(basicSettings)\n\n    this.props.updateSettings( { site: this.props.site, slate: this.props.slate, specificStacks: _specificStacks, sport: 'nfl', counter: this.props.week, season: this.props.season } )\n\n    // cache_settings('nfl', this.props.site, this.props.slate, {\n    //   specificStacks: _specificStacks\n    // })\n  }\n\n  resetStackSettings = () => {\n    const _specificStacks = getDefaultSpecificStacks()\n\n    this.props.updateSettings( { site: this.props.site, slate: this.props.slate, specificStacks: _specificStacks, sport: 'nfl', counter: this.props.week, season: this.props.season } )\n\n    // cache_settings('nfl', this.props.site, this.props.slate, {\n    //   specificStacks: _specificStacks\n    // })\n  }\n\n  setPreset = (index) => {\n    const _settings = this.props.presets.data[index]\n\n    this.props.updateSettings( { sport: 'nfl', site: this.props.site, slate: this.props.slate, counter: this.props.week, season: this.props.season, ..._settings } )\n    this.setState({\n      showPresetsActive: true\n    })\n\n    setTimeout(() => {\n      this.setState({\n        showPresetsActive: false\n      })\n    }, 1000)\n  }\n\n  render() {\n    const { settings, teamStacks, players, showdown } = this.props\n    let _teamStacksSettings = []\n    if (teamStacks.data && players.data && !players.loading && !teamStacks.loading)\n      _teamStacksSettings = mergeOrderTeamStacks(teamStacks.data, players.data, nflTeamNames)\n\n    return (\n      <div className=\"Settings\">\n        <SettingsContainer>\n          <HeadingCard style={{backgroundImage: `url(${FakurianDesign})`, backgroundSize: '100% auto'}}>\n            <Row>\n              <Col lg={5}>\n                <h1 style={{paddingTop: '15px'}}>Stack Settings</h1>\n              </Col>\n              <Col lg={7}>\n                {\n                  (this.props.showdown && (this.props.site !== 'dk')) ? '' : (\n                    <Button\n                      style={{marginTop: '18px'}}\n                      onClick={() => this.setPreset(0)}\n                      disabled={this.props.subscription.loading || ((this.props.subscription.permissions && !this.props.subscription.permissions.opt.nfl.historical_data))}\n                    >\n                      Use Presets\n                    </Button>\n                  )\n                }\n                {\n                  this.state.showPresetsActive ? (\n                    <div style={{margin: '5px 10px 10px 30px'}}>\n                      Active <CheckOutlined style={{color: '#50b547'}} />\n                    </div>\n                  ) : \"\"\n                }\n              </Col>\n              <Col lg={4} offset={5}>\n                {\n                  this.state.stackSettingMode === 'advanced' ? (\n                    <Popconfirm\n                      cancelText=\"No\"\n                      okText=\"Yes\"\n                      onClick={(e) => e.stopPropagation()}\n                      onCancel={(e) => e.stopPropagation()}\n                      disabled={this.props.settings.data.stackSettingMode === 'basic'}\n                      onConfirm={\n                        (e) => {\n                          e.stopPropagation()\n                          this.resetStackSettings()\n                        }\n                      }\n                      title={`Permenantly clear stacks and reset to defaults?`}\n                    >\n                      <Button\n                        style={{marginTop: '15px'}}\n                        disabled={this.props.settings.data.stackSettingMode === 'basic' || (!this.props.subscription.permissions.opt.nfl.specific_stacks && this.props.settings.data.stackSettingMode === 'basic')}\n                        ghost\n                        type='primary'\n                      >\n                        Reset Stack Settings\n                      </Button>\n                    </Popconfirm>\n                  ) : ''\n                }\n                <EnableDiv>\n                  <StyledEnableButton\n                    style={{marginTop: '15px'}}\n                    onClick={() => this.updateInputValue('stackSettingMode', this.state.stackSettingMode)}\n                    disabled={this.state.stackSettingMode === this.props.settings.data.stackSettingMode || (!this.props.subscription.permissions.opt.nfl.specific_stacks && this.props.settings.data.stackSettingMode === 'basic')}\n                    type='primary'\n                    ghost\n                  >\n                    {\n                      this.state.stackSettingMode === this.props.settings.data.stackSettingMode ? (\n                        'Enabled'\n                      ) : (\n\n                          <span>\n                              Enable\n                          </span>\n                      )\n                    }\n                  </StyledEnableButton>\n                </EnableDiv>\n              </Col>\n              <SwitchCol lg={2} offset={1}>\n                {\n                  !this.props.showdown ? (\n                    <div>\n                      <StyledSwitch\n                        checked={this.state.stackSettingMode === 'advanced'}\n                        checkedChildren=\"Advanced\"\n                        unCheckedChildren=\"Basic\"\n                        onClick={(e) => {this.setState({\n                          stackSettingMode: e ? 'advanced' : 'basic'\n                        })}}/>\n                    </div>\n                  ) : ''\n                }\n              </SwitchCol>\n            </Row>\n            {\n              this.state.stackSettingMode === 'basic' ? (\n                <div>\n                  <BasicStackSettings\n                    updateInputValue={this.updateInputValue.bind(this)}\n                    showdown={this.props.showdown}\n                    settings={this.props.settings}\n                    disabled={ this.props.settings.data.stackSettingMode !== this.state.stackSettingMode }\n                  />\n                  <GeneralStackSettings\n                    updateInputValue={this.updateInputValue.bind(this)}\n                    showdown={this.props.showdown}\n                    settings={this.props.settings}\n                    disabled={ this.props.settings.data.stackSettingMode !== this.state.stackSettingMode }\n                  />\n                </div>\n              ) : (\n                <div>\n                  <GeneralStackSettings\n                    updateInputValue={this.updateInputValue.bind(this)}\n                    showdown={this.props.showdown}\n                    settings={this.props.settings}\n                    disabled={ this.props.settings.data.stackSettingMode !== this.state.stackSettingMode }\n                  />\n                  <AdvancedStackSettings\n                    updateSpecificStackValue={this.updateSpecificStackValue.bind(this)}\n                    removeSpecificStackRow={this.removeSpecificStackRow.bind(this)}\n                    addSpecificStackRow={this.addSpecificStackRow.bind(this)}\n                    showdown={this.props.showdown}\n                    settings={this.props.settings}\n                    disabled={ this.props.settings.data.stackSettingMode !== this.state.stackSettingMode }\n                  />\n                </div>\n              )\n            }\n          </HeadingCard>\n          <TeamStacksTable\n            rows={_teamStacksSettings}\n            className={'team-stacks-table'}\n            onChangeHandler={this.onTeamStacksChange.bind(this)}\n            loading={teamStacks.loading}\n            clearStackSettings={this.props.clearStackSettings}\n            uncheckStackingOptions={this.uncheckStackingOptions.bind(this)}\n            onChangeAllTeamStackOption={this.onChangeAllTeamStackOption.bind(this)}\n            showdown={this.props.showdown}\n            rowKey={(_row, i) => {\n              return `team-stacks-custom-${String(i)}`\n            }}\n          />\n        </SettingsContainer>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    settings: state.lineup.settings,\n    teamStacks: state.lineup.teamStacks,\n    players: state.lineup.players,\n    loggedin: state.auth.loggedin,\n    subscription: state.account.subscription,\n    savedLineups: state.lineup.savedLineups,\n    presets: state.lineup.presets,\n  }),\n  {\n    fetchOpt: lineupActions.fetchOpt,\n    updateSettings: lineupActions.updateSettings,\n    updateTeamStacks: lineupActions.updateTeamStacks\n  }\n)(Settings)\n"],"sourceRoot":""}